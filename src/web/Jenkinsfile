@Library('pipeline-library')

Map tasks = [failFast: false]

configuration = ["checkout", "download_tooling"]

tasks['x86'] = { ->
    node {
        multiArchFlow('x86')
    }
}
tasks['arm'] = { ->
    node {
        multiArchFlow('arm')
    }
}

// Run both task in parallel
parallel(tasks)

def multiArchFlow(String arch) {

    tech = "nodejs"

    stage('initial') {
        sh "echo ${configuration}"
    }

    if (configuration.contains("checkout")) {
        stage('checkout') {
            checkout(tech)
            sh "echo ${STAGE_NAME}"
        }
    }
    
    if (configuration.contains("download_tooling")) {
        downloadTooling(tech)
    }

    if (configuration.contains("build")) {
        build(tech)
    }
}